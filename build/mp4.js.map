{
  "version": 3,
  "sources": ["../embuild/mp4.js"],
  "sourcesContent": ["\nvar Module = (() => {\n  var _scriptDir = import.meta.url;\n  \n  return (\nfunction(config) {\n  var Module = config || {};\n\nvar Module=typeof Module!=\"undefined\"?Module:{};var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise(function(resolve,reject){readyPromiseResolve=resolve;readyPromiseReject=reject});Module[\"create_buffer\"]=function create_buffer(size){return Module[\"_malloc\"](size)};Module[\"free_buffer\"]=function create_buffer(pointer){return Module[\"_free\"](pointer)};Module[\"locateFile\"]=function locateFileDefault(path,dir){if(Module[\"simd\"]){path=path.replace(/\\.wasm$/i,\".simd.wasm\")}if(Module[\"getWasmPath\"]){return Module[\"getWasmPath\"](path,dir,Module[\"simd\"])}else{return dir+path}};Module[\"createWebCodecsEncoder\"]=function createWebCodecsEncoder(opts){return createWebCodecsEncoderWithModule(Module,opts)};var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=typeof window==\"object\";var ENVIRONMENT_IS_WORKER=typeof importScripts==\"function\";var ENVIRONMENT_IS_NODE=typeof process==\"object\"&&typeof process.versions==\"object\"&&typeof process.versions.node==\"string\";var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!=\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=(url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=title=>document.title=title}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var POINTER_SIZE=4;var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!=\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var ABORT=false;var EXITSTATUS;function UTF8ArrayToString(heapOrArray,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var str=\"\";while(!(idx>=endIdx)){var u0=heapOrArray[idx++];if(!u0)return str;if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var c=str.charCodeAt(i);if(c<=127){len++}else if(c<=2047){len+=2}else if(c>=55296&&c<=57343){len+=4;++i}else{len+=3}}return len}var HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateMemoryViews(){var b=wasmMemory.buffer;Module[\"HEAP8\"]=HEAP8=new Int8Array(b);Module[\"HEAP16\"]=HEAP16=new Int16Array(b);Module[\"HEAP32\"]=HEAP32=new Int32Array(b);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(b);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(b);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(b);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(b);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(b)}var INITIAL_MEMORY=Module[\"INITIAL_MEMORY\"]||16777216;var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -sASSERTIONS for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}var wasmBinaryFile;if(Module[\"locateFile\"]){wasmBinaryFile=\"mp4.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}}else{wasmBinaryFile=new URL(\"mp4.wasm\",import.meta.url).href}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}throw\"both async and sync fetching of the wasm failed\"}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch==\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary(wasmBinaryFile)})}}return Promise.resolve().then(function(){return getBinary(wasmBinaryFile)})}function createWasm(){var info={\"a\":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;wasmMemory=Module[\"asm\"][\"x\"];updateMemoryViews();wasmTable=Module[\"asm\"][\"B\"];addOnInit(Module[\"asm\"][\"y\"]);removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");function receiveInstantiationResult(result){receiveInstance(result[\"instance\"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(function(instance){return instance}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming==\"function\"&&!isDataURI(wasmBinaryFile)&&typeof fetch==\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiationResult,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(receiveInstantiationResult)})})}else{return instantiateArrayBuffer(receiveInstantiationResult)}}if(Module[\"instantiateWasm\"]){try{var exports=Module[\"instantiateWasm\"](info,receiveInstance);return exports}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);readyPromiseReject(e)}}instantiateAsync().catch(readyPromiseReject);return{}}function callRuntimeCallbacks(callbacks){while(callbacks.length>0){callbacks.shift()(Module)}}function ___assert_fail(condition,filename,line,func){abort(\"Assertion failed: \"+UTF8ToString(condition)+\", at: \"+[filename?UTF8ToString(filename):\"unknown filename\",line,func?UTF8ToString(func):\"unknown function\"])}function __embind_register_bigint(primitiveType,name,size,minRange,maxRange){}function getShiftFromSize(size){switch(size){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\"Unknown type size: \"+size)}}function embind_init_charCodes(){var codes=new Array(256);for(var i=0;i<256;++i){codes[i]=String.fromCharCode(i)}embind_charCodes=codes}var embind_charCodes=undefined;function readLatin1String(ptr){var ret=\"\";var c=ptr;while(HEAPU8[c]){ret+=embind_charCodes[HEAPU8[c++]]}return ret}var awaitingDependencies={};var registeredTypes={};var typeDependencies={};var char_0=48;var char_9=57;function makeLegalFunctionName(name){if(undefined===name){return\"_unknown\"}name=name.replace(/[^a-zA-Z0-9_]/g,\"$\");var f=name.charCodeAt(0);if(f>=char_0&&f<=char_9){return\"_\"+name}return name}function createNamedFunction(name,body){name=makeLegalFunctionName(name);return new Function(\"body\",\"return function \"+name+\"() {\\n\"+'    \"use strict\";'+\"    return body.apply(this, arguments);\\n\"+\"};\\n\")(body)}function extendError(baseErrorType,errorName){var errorClass=createNamedFunction(errorName,function(message){this.name=errorName;this.message=message;var stack=new Error(message).stack;if(stack!==undefined){this.stack=this.toString()+\"\\n\"+stack.replace(/^Error(:[^\\n]*)?\\n/,\"\")}});errorClass.prototype=Object.create(baseErrorType.prototype);errorClass.prototype.constructor=errorClass;errorClass.prototype.toString=function(){if(this.message===undefined){return this.name}else{return this.name+\": \"+this.message}};return errorClass}var BindingError=undefined;function throwBindingError(message){throw new BindingError(message)}var InternalError=undefined;function throwInternalError(message){throw new InternalError(message)}function whenDependentTypesAreResolved(myTypes,dependentTypes,getTypeConverters){myTypes.forEach(function(type){typeDependencies[type]=dependentTypes});function onComplete(typeConverters){var myTypeConverters=getTypeConverters(typeConverters);if(myTypeConverters.length!==myTypes.length){throwInternalError(\"Mismatched type converter count\")}for(var i=0;i<myTypes.length;++i){registerType(myTypes[i],myTypeConverters[i])}}var typeConverters=new Array(dependentTypes.length);var unregisteredTypes=[];var registered=0;dependentTypes.forEach((dt,i)=>{if(registeredTypes.hasOwnProperty(dt)){typeConverters[i]=registeredTypes[dt]}else{unregisteredTypes.push(dt);if(!awaitingDependencies.hasOwnProperty(dt)){awaitingDependencies[dt]=[]}awaitingDependencies[dt].push(()=>{typeConverters[i]=registeredTypes[dt];++registered;if(registered===unregisteredTypes.length){onComplete(typeConverters)}})}});if(0===unregisteredTypes.length){onComplete(typeConverters)}}function registerType(rawType,registeredInstance,options={}){if(!(\"argPackAdvance\"in registeredInstance)){throw new TypeError(\"registerType registeredInstance requires argPackAdvance\")}var name=registeredInstance.name;if(!rawType){throwBindingError('type \"'+name+'\" must have a positive integer typeid pointer')}if(registeredTypes.hasOwnProperty(rawType)){if(options.ignoreDuplicateRegistrations){return}else{throwBindingError(\"Cannot register type '\"+name+\"' twice\")}}registeredTypes[rawType]=registeredInstance;delete typeDependencies[rawType];if(awaitingDependencies.hasOwnProperty(rawType)){var callbacks=awaitingDependencies[rawType];delete awaitingDependencies[rawType];callbacks.forEach(cb=>cb())}}function __embind_register_bool(rawType,name,size,trueValue,falseValue){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(wt){return!!wt},\"toWireType\":function(destructors,o){return o?trueValue:falseValue},\"argPackAdvance\":8,\"readValueFromPointer\":function(pointer){var heap;if(size===1){heap=HEAP8}else if(size===2){heap=HEAP16}else if(size===4){heap=HEAP32}else{throw new TypeError(\"Unknown boolean type size: \"+name)}return this[\"fromWireType\"](heap[pointer>>shift])},destructorFunction:null})}var emval_free_list=[];var emval_handle_array=[{},{value:undefined},{value:null},{value:true},{value:false}];function __emval_decref(handle){if(handle>4&&0===--emval_handle_array[handle].refcount){emval_handle_array[handle]=undefined;emval_free_list.push(handle)}}function count_emval_handles(){var count=0;for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){++count}}return count}function get_first_emval(){for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){return emval_handle_array[i]}}return null}function init_emval(){Module[\"count_emval_handles\"]=count_emval_handles;Module[\"get_first_emval\"]=get_first_emval}var Emval={toValue:handle=>{if(!handle){throwBindingError(\"Cannot use deleted val. handle = \"+handle)}return emval_handle_array[handle].value},toHandle:value=>{switch(value){case undefined:return 1;case null:return 2;case true:return 3;case false:return 4;default:{var handle=emval_free_list.length?emval_free_list.pop():emval_handle_array.length;emval_handle_array[handle]={refcount:1,value:value};return handle}}}};function simpleReadValueFromPointer(pointer){return this[\"fromWireType\"](HEAP32[pointer>>2])}function __embind_register_emval(rawType,name){name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(handle){var rv=Emval.toValue(handle);__emval_decref(handle);return rv},\"toWireType\":function(destructors,value){return Emval.toHandle(value)},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:null})}function floatReadValueFromPointer(name,shift){switch(shift){case 2:return function(pointer){return this[\"fromWireType\"](HEAPF32[pointer>>2])};case 3:return function(pointer){return this[\"fromWireType\"](HEAPF64[pointer>>3])};default:throw new TypeError(\"Unknown float type: \"+name)}}function __embind_register_float(rawType,name,size){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(value){return value},\"toWireType\":function(destructors,value){return value},\"argPackAdvance\":8,\"readValueFromPointer\":floatReadValueFromPointer(name,shift),destructorFunction:null})}function new_(constructor,argumentList){if(!(constructor instanceof Function)){throw new TypeError(\"new_ called with constructor type \"+typeof constructor+\" which is not a function\")}var dummy=createNamedFunction(constructor.name||\"unknownFunctionName\",function(){});dummy.prototype=constructor.prototype;var obj=new dummy;var r=constructor.apply(obj,argumentList);return r instanceof Object?r:obj}function runDestructors(destructors){while(destructors.length){var ptr=destructors.pop();var del=destructors.pop();del(ptr)}}function craftInvokerFunction(humanName,argTypes,classType,cppInvokerFunc,cppTargetFunc){var argCount=argTypes.length;if(argCount<2){throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\")}var isClassMethodFunc=argTypes[1]!==null&&classType!==null;var needsDestructorStack=false;for(var i=1;i<argTypes.length;++i){if(argTypes[i]!==null&&argTypes[i].destructorFunction===undefined){needsDestructorStack=true;break}}var returns=argTypes[0].name!==\"void\";var argsList=\"\";var argsListWired=\"\";for(var i=0;i<argCount-2;++i){argsList+=(i!==0?\", \":\"\")+\"arg\"+i;argsListWired+=(i!==0?\", \":\"\")+\"arg\"+i+\"Wired\"}var invokerFnBody=\"return function \"+makeLegalFunctionName(humanName)+\"(\"+argsList+\") {\\n\"+\"if (arguments.length !== \"+(argCount-2)+\") {\\n\"+\"throwBindingError('function \"+humanName+\" called with ' + arguments.length + ' arguments, expected \"+(argCount-2)+\" args!');\\n\"+\"}\\n\";if(needsDestructorStack){invokerFnBody+=\"var destructors = [];\\n\"}var dtorStack=needsDestructorStack?\"destructors\":\"null\";var args1=[\"throwBindingError\",\"invoker\",\"fn\",\"runDestructors\",\"retType\",\"classParam\"];var args2=[throwBindingError,cppInvokerFunc,cppTargetFunc,runDestructors,argTypes[0],argTypes[1]];if(isClassMethodFunc){invokerFnBody+=\"var thisWired = classParam.toWireType(\"+dtorStack+\", this);\\n\"}for(var i=0;i<argCount-2;++i){invokerFnBody+=\"var arg\"+i+\"Wired = argType\"+i+\".toWireType(\"+dtorStack+\", arg\"+i+\"); // \"+argTypes[i+2].name+\"\\n\";args1.push(\"argType\"+i);args2.push(argTypes[i+2])}if(isClassMethodFunc){argsListWired=\"thisWired\"+(argsListWired.length>0?\", \":\"\")+argsListWired}invokerFnBody+=(returns?\"var rv = \":\"\")+\"invoker(fn\"+(argsListWired.length>0?\", \":\"\")+argsListWired+\");\\n\";if(needsDestructorStack){invokerFnBody+=\"runDestructors(destructors);\\n\"}else{for(var i=isClassMethodFunc?1:2;i<argTypes.length;++i){var paramName=i===1?\"thisWired\":\"arg\"+(i-2)+\"Wired\";if(argTypes[i].destructorFunction!==null){invokerFnBody+=paramName+\"_dtor(\"+paramName+\"); // \"+argTypes[i].name+\"\\n\";args1.push(paramName+\"_dtor\");args2.push(argTypes[i].destructorFunction)}}}if(returns){invokerFnBody+=\"var ret = retType.fromWireType(rv);\\n\"+\"return ret;\\n\"}else{}invokerFnBody+=\"}\\n\";args1.push(invokerFnBody);var invokerFunction=new_(Function,args1).apply(null,args2);return invokerFunction}function ensureOverloadTable(proto,methodName,humanName){if(undefined===proto[methodName].overloadTable){var prevFunc=proto[methodName];proto[methodName]=function(){if(!proto[methodName].overloadTable.hasOwnProperty(arguments.length)){throwBindingError(\"Function '\"+humanName+\"' called with an invalid number of arguments (\"+arguments.length+\") - expects one of (\"+proto[methodName].overloadTable+\")!\")}return proto[methodName].overloadTable[arguments.length].apply(this,arguments)};proto[methodName].overloadTable=[];proto[methodName].overloadTable[prevFunc.argCount]=prevFunc}}function exposePublicSymbol(name,value,numArguments){if(Module.hasOwnProperty(name)){if(undefined===numArguments||undefined!==Module[name].overloadTable&&undefined!==Module[name].overloadTable[numArguments]){throwBindingError(\"Cannot register public name '\"+name+\"' twice\")}ensureOverloadTable(Module,name,name);if(Module.hasOwnProperty(numArguments)){throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\"+numArguments+\")!\")}Module[name].overloadTable[numArguments]=value}else{Module[name]=value;if(undefined!==numArguments){Module[name].numArguments=numArguments}}}function heap32VectorToArray(count,firstElement){var array=[];for(var i=0;i<count;i++){array.push(HEAPU32[firstElement+i*4>>2])}return array}function replacePublicSymbol(name,value,numArguments){if(!Module.hasOwnProperty(name)){throwInternalError(\"Replacing nonexistant public symbol\")}if(undefined!==Module[name].overloadTable&&undefined!==numArguments){Module[name].overloadTable[numArguments]=value}else{Module[name]=value;Module[name].argCount=numArguments}}function dynCallLegacy(sig,ptr,args){var f=Module[\"dynCall_\"+sig];return args&&args.length?f.apply(null,[ptr].concat(args)):f.call(null,ptr)}var wasmTableMirror=[];function getWasmTableEntry(funcPtr){var func=wasmTableMirror[funcPtr];if(!func){if(funcPtr>=wasmTableMirror.length)wasmTableMirror.length=funcPtr+1;wasmTableMirror[funcPtr]=func=wasmTable.get(funcPtr)}return func}function dynCall(sig,ptr,args){if(sig.includes(\"j\")){return dynCallLegacy(sig,ptr,args)}var rtn=getWasmTableEntry(ptr).apply(null,args);return rtn}function getDynCaller(sig,ptr){var argCache=[];return function(){argCache.length=0;Object.assign(argCache,arguments);return dynCall(sig,ptr,argCache)}}function embind__requireFunction(signature,rawFunction){signature=readLatin1String(signature);function makeDynCaller(){if(signature.includes(\"j\")){return getDynCaller(signature,rawFunction)}return getWasmTableEntry(rawFunction)}var fp=makeDynCaller();if(typeof fp!=\"function\"){throwBindingError(\"unknown function pointer with signature \"+signature+\": \"+rawFunction)}return fp}var UnboundTypeError=undefined;function getTypeName(type){var ptr=___getTypeName(type);var rv=readLatin1String(ptr);_free(ptr);return rv}function throwUnboundTypeError(message,types){var unboundTypes=[];var seen={};function visit(type){if(seen[type]){return}if(registeredTypes[type]){return}if(typeDependencies[type]){typeDependencies[type].forEach(visit);return}unboundTypes.push(type);seen[type]=true}types.forEach(visit);throw new UnboundTypeError(message+\": \"+unboundTypes.map(getTypeName).join([\", \"]))}function __embind_register_function(name,argCount,rawArgTypesAddr,signature,rawInvoker,fn){var argTypes=heap32VectorToArray(argCount,rawArgTypesAddr);name=readLatin1String(name);rawInvoker=embind__requireFunction(signature,rawInvoker);exposePublicSymbol(name,function(){throwUnboundTypeError(\"Cannot call \"+name+\" due to unbound types\",argTypes)},argCount-1);whenDependentTypesAreResolved([],argTypes,function(argTypes){var invokerArgsArray=[argTypes[0],null].concat(argTypes.slice(1));replacePublicSymbol(name,craftInvokerFunction(name,invokerArgsArray,null,rawInvoker,fn),argCount-1);return[]})}function integerReadValueFromPointer(name,shift,signed){switch(shift){case 0:return signed?function readS8FromPointer(pointer){return HEAP8[pointer]}:function readU8FromPointer(pointer){return HEAPU8[pointer]};case 1:return signed?function readS16FromPointer(pointer){return HEAP16[pointer>>1]}:function readU16FromPointer(pointer){return HEAPU16[pointer>>1]};case 2:return signed?function readS32FromPointer(pointer){return HEAP32[pointer>>2]}:function readU32FromPointer(pointer){return HEAPU32[pointer>>2]};default:throw new TypeError(\"Unknown integer type: \"+name)}}function __embind_register_integer(primitiveType,name,size,minRange,maxRange){name=readLatin1String(name);if(maxRange===-1){maxRange=4294967295}var shift=getShiftFromSize(size);var fromWireType=value=>value;if(minRange===0){var bitshift=32-8*size;fromWireType=value=>value<<bitshift>>>bitshift}var isUnsignedType=name.includes(\"unsigned\");var checkAssertions=(value,toTypeName)=>{};var toWireType;if(isUnsignedType){toWireType=function(destructors,value){checkAssertions(value,this.name);return value>>>0}}else{toWireType=function(destructors,value){checkAssertions(value,this.name);return value}}registerType(primitiveType,{name:name,\"fromWireType\":fromWireType,\"toWireType\":toWireType,\"argPackAdvance\":8,\"readValueFromPointer\":integerReadValueFromPointer(name,shift,minRange!==0),destructorFunction:null})}function __embind_register_memory_view(rawType,dataTypeIndex,name){var typeMapping=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];var TA=typeMapping[dataTypeIndex];function decodeMemoryView(handle){handle=handle>>2;var heap=HEAPU32;var size=heap[handle];var data=heap[handle+1];return new TA(heap.buffer,data,size)}name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":decodeMemoryView,\"argPackAdvance\":8,\"readValueFromPointer\":decodeMemoryView},{ignoreDuplicateRegistrations:true})}function __embind_register_std_string(rawType,name){name=readLatin1String(name);var stdStringIsUTF8=name===\"std::string\";registerType(rawType,{name:name,\"fromWireType\":function(value){var length=HEAPU32[value>>2];var payload=value+4;var str;if(stdStringIsUTF8){var decodeStartPtr=payload;for(var i=0;i<=length;++i){var currentBytePtr=payload+i;if(i==length||HEAPU8[currentBytePtr]==0){var maxRead=currentBytePtr-decodeStartPtr;var stringSegment=UTF8ToString(decodeStartPtr,maxRead);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+1}}}else{var a=new Array(length);for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAPU8[payload+i])}str=a.join(\"\")}_free(value);return str},\"toWireType\":function(destructors,value){if(value instanceof ArrayBuffer){value=new Uint8Array(value)}var length;var valueIsOfTypeString=typeof value==\"string\";if(!(valueIsOfTypeString||value instanceof Uint8Array||value instanceof Uint8ClampedArray||value instanceof Int8Array)){throwBindingError(\"Cannot pass non-string to std::string\")}if(stdStringIsUTF8&&valueIsOfTypeString){length=lengthBytesUTF8(value)}else{length=value.length}var base=_malloc(4+length+1);var ptr=base+4;HEAPU32[base>>2]=length;if(stdStringIsUTF8&&valueIsOfTypeString){stringToUTF8(value,ptr,length+1)}else{if(valueIsOfTypeString){for(var i=0;i<length;++i){var charCode=value.charCodeAt(i);if(charCode>255){_free(ptr);throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\")}HEAPU8[ptr+i]=charCode}}else{for(var i=0;i<length;++i){HEAPU8[ptr+i]=value[i]}}}if(destructors!==null){destructors.push(_free,base)}return base},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})}function UTF16ToString(ptr,maxBytesToRead){var str=\"\";for(var i=0;!(i>=maxBytesToRead/2);++i){var codeUnit=HEAP16[ptr+i*2>>1];if(codeUnit==0)break;str+=String.fromCharCode(codeUnit)}return str}function stringToUTF16(str,outPtr,maxBytesToWrite){if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<2)return 0;maxBytesToWrite-=2;var startPtr=outPtr;var numCharsToWrite=maxBytesToWrite<str.length*2?maxBytesToWrite/2:str.length;for(var i=0;i<numCharsToWrite;++i){var codeUnit=str.charCodeAt(i);HEAP16[outPtr>>1]=codeUnit;outPtr+=2}HEAP16[outPtr>>1]=0;return outPtr-startPtr}function lengthBytesUTF16(str){return str.length*2}function UTF32ToString(ptr,maxBytesToRead){var i=0;var str=\"\";while(!(i>=maxBytesToRead/4)){var utf32=HEAP32[ptr+i*4>>2];if(utf32==0)break;++i;if(utf32>=65536){var ch=utf32-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}else{str+=String.fromCharCode(utf32)}}return str}function stringToUTF32(str,outPtr,maxBytesToWrite){if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<4)return 0;var startPtr=outPtr;var endPtr=startPtr+maxBytesToWrite-4;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343){var trailSurrogate=str.charCodeAt(++i);codeUnit=65536+((codeUnit&1023)<<10)|trailSurrogate&1023}HEAP32[outPtr>>2]=codeUnit;outPtr+=4;if(outPtr+4>endPtr)break}HEAP32[outPtr>>2]=0;return outPtr-startPtr}function lengthBytesUTF32(str){var len=0;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343)++i;len+=4}return len}function __embind_register_std_wstring(rawType,charSize,name){name=readLatin1String(name);var decodeString,encodeString,getHeap,lengthBytesUTF,shift;if(charSize===2){decodeString=UTF16ToString;encodeString=stringToUTF16;lengthBytesUTF=lengthBytesUTF16;getHeap=()=>HEAPU16;shift=1}else if(charSize===4){decodeString=UTF32ToString;encodeString=stringToUTF32;lengthBytesUTF=lengthBytesUTF32;getHeap=()=>HEAPU32;shift=2}registerType(rawType,{name:name,\"fromWireType\":function(value){var length=HEAPU32[value>>2];var HEAP=getHeap();var str;var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i*charSize;if(i==length||HEAP[currentBytePtr>>shift]==0){var maxReadBytes=currentBytePtr-decodeStartPtr;var stringSegment=decodeString(decodeStartPtr,maxReadBytes);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+charSize}}_free(value);return str},\"toWireType\":function(destructors,value){if(!(typeof value==\"string\")){throwBindingError(\"Cannot pass non-string to C++ string type \"+name)}var length=lengthBytesUTF(value);var ptr=_malloc(4+length+charSize);HEAPU32[ptr>>2]=length>>shift;encodeString(value,ptr+4,length+charSize);if(destructors!==null){destructors.push(_free,ptr)}return ptr},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})}function __embind_register_void(rawType,name){name=readLatin1String(name);registerType(rawType,{isVoid:true,name:name,\"argPackAdvance\":0,\"fromWireType\":function(){return undefined},\"toWireType\":function(destructors,o){return undefined}})}function requireRegisteredType(rawType,humanName){var impl=registeredTypes[rawType];if(undefined===impl){throwBindingError(humanName+\" has unknown type \"+getTypeName(rawType))}return impl}function __emval_as(handle,returnType,destructorsRef){handle=Emval.toValue(handle);returnType=requireRegisteredType(returnType,\"emval::as\");var destructors=[];var rd=Emval.toHandle(destructors);HEAPU32[destructorsRef>>2]=rd;return returnType[\"toWireType\"](destructors,handle)}function emval_lookupTypes(argCount,argTypes){var a=new Array(argCount);for(var i=0;i<argCount;++i){a[i]=requireRegisteredType(HEAPU32[argTypes+i*POINTER_SIZE>>2],\"parameter \"+i)}return a}function __emval_call(handle,argCount,argTypes,argv){handle=Emval.toValue(handle);var types=emval_lookupTypes(argCount,argTypes);var args=new Array(argCount);for(var i=0;i<argCount;++i){var type=types[i];args[i]=type[\"readValueFromPointer\"](argv);argv+=type[\"argPackAdvance\"]}var rv=handle.apply(undefined,args);return Emval.toHandle(rv)}function __emval_get_property(handle,key){handle=Emval.toValue(handle);key=Emval.toValue(key);return Emval.toHandle(handle[key])}function __emval_incref(handle){if(handle>4){emval_handle_array[handle].refcount+=1}}function __emval_is_number(handle){handle=Emval.toValue(handle);return typeof handle==\"number\"}var emval_symbols={};function getStringOrSymbol(address){var symbol=emval_symbols[address];if(symbol===undefined){return readLatin1String(address)}return symbol}function __emval_new_cstring(v){return Emval.toHandle(getStringOrSymbol(v))}function __emval_run_destructors(handle){var destructors=Emval.toValue(handle);runDestructors(destructors);__emval_decref(handle)}function __emval_take_value(type,arg){type=requireRegisteredType(type,\"_emval_take_value\");var v=type[\"readValueFromPointer\"](arg);return Emval.toHandle(v)}function _abort(){abort(\"\")}function _emscripten_memcpy_big(dest,src,num){HEAPU8.copyWithin(dest,src,src+num)}function getHeapMax(){return 2147483648}function emscripten_realloc_buffer(size){var b=wasmMemory.buffer;try{wasmMemory.grow(size-b.byteLength+65535>>>16);updateMemoryViews();return 1}catch(e){}}function _emscripten_resize_heap(requestedSize){var oldSize=HEAPU8.length;requestedSize=requestedSize>>>0;var maxHeapSize=getHeapMax();if(requestedSize>maxHeapSize){return false}let alignUp=(x,multiple)=>x+(multiple-x%multiple)%multiple;for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=emscripten_realloc_buffer(newSize);if(replacement){return true}}return false}embind_init_charCodes();BindingError=Module[\"BindingError\"]=extendError(Error,\"BindingError\");InternalError=Module[\"InternalError\"]=extendError(Error,\"InternalError\");init_emval();UnboundTypeError=Module[\"UnboundTypeError\"]=extendError(Error,\"UnboundTypeError\");var asmLibraryArg={\"a\":___assert_fail,\"q\":__embind_register_bigint,\"u\":__embind_register_bool,\"t\":__embind_register_emval,\"o\":__embind_register_float,\"h\":__embind_register_function,\"d\":__embind_register_integer,\"c\":__embind_register_memory_view,\"n\":__embind_register_std_string,\"l\":__embind_register_std_wstring,\"v\":__embind_register_void,\"k\":__emval_as,\"w\":__emval_call,\"b\":__emval_decref,\"e\":__emval_get_property,\"g\":__emval_incref,\"p\":__emval_is_number,\"f\":__emval_new_cstring,\"j\":__emval_run_destructors,\"i\":__emval_take_value,\"m\":_abort,\"s\":_emscripten_memcpy_big,\"r\":_emscripten_resize_heap};var asm=createWasm();var ___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=function(){return(___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=Module[\"asm\"][\"y\"]).apply(null,arguments)};var _malloc=Module[\"_malloc\"]=function(){return(_malloc=Module[\"_malloc\"]=Module[\"asm\"][\"z\"]).apply(null,arguments)};var _free=Module[\"_free\"]=function(){return(_free=Module[\"_free\"]=Module[\"asm\"][\"A\"]).apply(null,arguments)};var ___getTypeName=Module[\"___getTypeName\"]=function(){return(___getTypeName=Module[\"___getTypeName\"]=Module[\"asm\"][\"C\"]).apply(null,arguments)};var __embind_initialize_bindings=Module[\"__embind_initialize_bindings\"]=function(){return(__embind_initialize_bindings=Module[\"__embind_initialize_bindings\"]=Module[\"asm\"][\"D\"]).apply(null,arguments)};var dynCall_ijiii=Module[\"dynCall_ijiii\"]=function(){return(dynCall_ijiii=Module[\"dynCall_ijiii\"]=Module[\"asm\"][\"E\"]).apply(null,arguments)};var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();\n\n\n  return Module.ready\n}\n);\n})();\nexport default Module;/* post code */\nconst START_CODE = new Uint8Array([0, 0, 0, 1]);\n\nfunction defaultError(error) {\n  console.error(error);\n}\n\nModule.createFile = createFile;\nexport function createFile(initialCapacity = 256) {\n  let cursor = 0;\n  let usedBytes = 0;\n  let contents = new Uint8Array(initialCapacity);\n  return {\n    contents: function () {\n      return contents.slice(0, usedBytes);\n    },\n    seek: function (offset) {\n      // offset in bytes\n      cursor = offset;\n    },\n    write: function (data) {\n      const size = data.byteLength;\n      expand(cursor + size);\n      contents.set(data, cursor);\n      cursor += size;\n      usedBytes = Math.max(usedBytes, cursor);\n      return size;\n    },\n  };\n\n  function expand(newCapacity) {\n    var prevCapacity = contents.length;\n    if (prevCapacity >= newCapacity) return; // No need to expand, the storage was already large enough.\n    // Don't expand strictly to the given requested limit if it's only a very small increase, but instead geometrically grow capacity.\n    // For small filesizes (<1MB), perform size*2 geometric increase, but for large sizes, do a much more conservative size*1.125 increase to\n    // avoid overshooting the allocation cap by a very large margin.\n    var CAPACITY_DOUBLING_MAX = 1024 * 1024;\n    newCapacity = Math.max(\n      newCapacity,\n      (prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2.0 : 1.125)) >>>\n        0\n    );\n    if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256); // At minimum allocate 256b for each file when expanding.\n    const oldContents = contents;\n    contents = new Uint8Array(newCapacity); // Allocate new storage.\n    if (usedBytes > 0) contents.set(oldContents.subarray(0, usedBytes), 0);\n  }\n}\n\nModule.isWebCodecsSupported = isWebCodecsSupported;\nexport function isWebCodecsSupported() {\n  return (\n    typeof window !== \"undefined\" && typeof window.VideoEncoder === \"function\"\n  );\n}\n\nexport function createWebCodecsEncoderWithModule(MP4, opts = {}) {\n  const {\n    width,\n    height,\n    groupOfPictures = 20,\n    fps = 30,\n    fragmentation = false,\n    sequential = false,\n    hevc = false,\n    format = \"annexb\",\n    // codec = \"avc1.420034\", // Baseline 4.2\n    codec = \"avc1.4d0034\", // Main 5.2\n    acceleration,\n    bitrate,\n    error = defaultError,\n    encoderOptions = {},\n    flushFrequency = 10,\n  } = opts;\n\n  if (!isWebCodecsSupported()) {\n    throw new Error(\n      \"MP4 H264 encoding/decoding depends on WebCodecs API which is not supported in this environment\"\n    );\n  }\n\n  if (typeof width !== \"number\" || typeof height !== \"number\") {\n    throw new Error(\"Must specify { width, height } options\");\n  }\n\n  if (!isFinite(width) || width < 0 || !isFinite(height) || height < 0) {\n    throw new Error(\"{ width, height } options must be positive integers\");\n  }\n\n  const file = createFile();\n  const mux = MP4.create_muxer(\n    {\n      width,\n      height,\n      fps,\n      fragmentation,\n      sequential,\n      hevc,\n    },\n    mux_write\n  );\n\n  const config = {\n    codec,\n    width: width,\n    height: height,\n    avc: {\n      format,\n    },\n    hardwareAcceleration: acceleration,\n    // There is a bug on macOS if this is greater than 30 fps\n    // framerate: fps,\n    bitrate,\n    ...encoderOptions,\n  };\n\n  let frameIndex = 0;\n\n  const encoder = new window.VideoEncoder({\n    output(chunk, opts) {\n      writeAVC(chunk, opts);\n    },\n    error,\n  });\n  encoder.configure(config);\n\n  return {\n    async end() {\n      await encoder.flush();\n      encoder.close();\n      MP4.finalize_muxer(mux);\n      return file.contents();\n    },\n    async addFrame(bitmap) {\n      const timestamp = (1 / fps) * frameIndex * 1000000;\n      const keyFrame = frameIndex % groupOfPictures === 0;\n      let frame = new VideoFrame(bitmap, { timestamp });\n      encoder.encode(frame, { keyFrame });\n      frame.close();\n      if (flushFrequency != null && (frameIndex + 1) % flushFrequency === 0) {\n        await encoder.flush();\n      }\n      frameIndex++;\n    },\n    async flush() {\n      return encoder.flush();\n    },\n  };\n\n  function mux_write(data_ptr, size, offset) {\n    // seek to byte offset in file\n    file.seek(offset);\n    // get subarray of memory we are writing\n    const data = MP4.HEAPU8.subarray(data_ptr, data_ptr + size);\n    // write into virtual file\n    return file.write(data) !== data.byteLength;\n  }\n\n  function write_nal(uint8) {\n    const p = MP4._malloc(uint8.byteLength);\n    MP4.HEAPU8.set(uint8, p);\n    MP4.mux_nal(mux, p, uint8.byteLength);\n    MP4._free(p);\n  }\n\n  function writeAVC(chunk, opts) {\n    let avccConfig = null;\n\n    let description;\n    if (opts) {\n      if (opts.description) {\n        description = opts.description;\n      }\n      if (opts.decoderConfig && opts.decoderConfig.description) {\n        description = opts.decoderConfig.description;\n      }\n    }\n\n    if (description) {\n      try {\n        avccConfig = parseAVCC(description);\n      } catch (err) {\n        error(err);\n        return;\n      }\n    }\n\n    const nal = [];\n    if (avccConfig) {\n      avccConfig.sps_list.forEach((sps) => {\n        nal.push(START_CODE);\n        nal.push(sps);\n      });\n      avccConfig.pps_list.forEach((pps) => {\n        nal.push(START_CODE);\n        nal.push(pps);\n      });\n    }\n\n    if (format === \"annexb\") {\n      const uint8 = new Uint8Array(chunk.byteLength);\n      chunk.copyTo(uint8);\n      nal.push(uint8);\n    } else {\n      try {\n        const arrayBuf = new ArrayBuffer(chunk.byteLength);\n        chunk.copyTo(arrayBuf);\n        convertAVCToAnnexBInPlaceForLength4(arrayBuf).forEach((sub) => {\n          nal.push(START_CODE);\n          nal.push(sub);\n        });\n      } catch (err) {\n        error(err);\n        return;\n      }\n    }\n\n    write_nal(concatBuffers(nal));\n  }\n}\n\nfunction concatBuffers(arrays) {\n  // Calculate byteSize from all arrays\n  const size = arrays.reduce((a, b) => a + b.byteLength, 0);\n  // Allcolate a new buffer\n  const result = new Uint8Array(size);\n  let offset = 0;\n  for (let i = 0; i < arrays.length; i++) {\n    const arr = arrays[i];\n    result.set(arr, offset);\n    offset += arr.byteLength;\n  }\n  return result;\n}\n\nfunction convertAVCToAnnexBInPlaceForLength4(arrayBuf) {\n  const kLengthSize = 4;\n  let pos = 0;\n  const chunks = [];\n  const size = arrayBuf.byteLength;\n  const uint8 = new Uint8Array(arrayBuf);\n  while (pos + kLengthSize < size) {\n    // read uint 32, 4 byte NAL length\n    let nal_length = uint8[pos];\n    nal_length = (nal_length << 8) + uint8[pos + 1];\n    nal_length = (nal_length << 8) + uint8[pos + 2];\n    nal_length = (nal_length << 8) + uint8[pos + 3];\n\n    chunks.push(new Uint8Array(arrayBuf, pos + kLengthSize, nal_length));\n    if (nal_length == 0) throw new Error(\"Error: invalid nal_length 0\");\n    pos += kLengthSize + nal_length;\n  }\n  return chunks;\n}\n\nfunction parseAVCC(avcc) {\n  const view = new DataView(avcc);\n  let off = 0;\n  const version = view.getUint8(off++);\n  const profile = view.getUint8(off++);\n  const compat = view.getUint8(off++);\n  const level = view.getUint8(off++);\n  const length_size = (view.getUint8(off++) & 0x3) + 1;\n  if (length_size !== 4)\n    throw new Error(\"Expected length_size to indicate 4 bytes\");\n  const numSPS = view.getUint8(off++) & 0x1f;\n  const sps_list = [];\n  for (let i = 0; i < numSPS; i++) {\n    const sps_len = view.getUint16(off, false);\n    off += 2;\n    const sps = new Uint8Array(view.buffer, off, sps_len);\n    sps_list.push(sps);\n    off += sps_len;\n  }\n  const numPPS = view.getUint8(off++);\n  const pps_list = [];\n  for (let i = 0; i < numPPS; i++) {\n    const pps_len = view.getUint16(off, false);\n    off += 2;\n    const pps = new Uint8Array(view.buffer, off, pps_len);\n    pps_list.push(pps);\n    off += pps_len;\n  }\n  return {\n    offset: off,\n    version,\n    profile,\n    compat,\n    level,\n    length_size,\n    pps_list,\n    sps_list,\n    numSPS,\n  };\n}\n"],
  "mappings": "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",
  "names": ["Module", "_scriptDir", "config", "readyPromiseResolve", "readyPromiseReject", "resolve", "reject", "size", "pointer", "path", "dir", "opts", "createWebCodecsEncoderWithModule", "moduleOverrides", "arguments_", "thisProgram", "quit_", "status", "toThrow", "ENVIRONMENT_IS_WEB", "ENVIRONMENT_IS_WORKER", "ENVIRONMENT_IS_NODE", "scriptDirectory", "locateFile", "read_", "readAsync", "readBinary", "setWindowTitle", "url", "xhr", "onload", "onerror", "title", "out", "err", "POINTER_SIZE", "wasmBinary", "noExitRuntime", "abort", "wasmMemory", "ABORT", "EXITSTATUS", "UTF8ArrayToString", "heapOrArray", "idx", "maxBytesToRead", "endIdx", "str", "u0", "u1", "u2", "ch", "UTF8ToString", "ptr", "HEAPU8", "stringToUTF8Array", "heap", "outIdx", "maxBytesToWrite", "startIdx", "i", "stringToUTF8", "outPtr", "lengthBytesUTF8", "len", "c", "HEAP8", "HEAP16", "HEAPU16", "HEAP32", "HEAPU32", "HEAPF32", "HEAPF64", "updateMemoryViews", "b", "INITIAL_MEMORY", "wasmTable", "__ATPRERUN__", "__ATINIT__", "__ATPOSTRUN__", "runtimeInitialized", "preRun", "addOnPreRun", "callRuntimeCallbacks", "initRuntime", "postRun", "addOnPostRun", "cb", "addOnInit", "runDependencies", "runDependencyWatcher", "dependenciesFulfilled", "addRunDependency", "id", "removeRunDependency", "callback", "what", "e", "dataURIPrefix", "isDataURI", "filename", "wasmBinaryFile", "getBinary", "file", "getBinaryPromise", "response", "createWasm", "info", "asmLibraryArg", "receiveInstance", "instance", "module", "exports", "receiveInstantiationResult", "result", "instantiateArrayBuffer", "receiver", "binary", "reason", "instantiateAsync", "callbacks", "___assert_fail", "condition", "line", "func", "__embind_register_bigint", "primitiveType", "name", "minRange", "maxRange", "getShiftFromSize", "embind_init_charCodes", "codes", "embind_charCodes", "readLatin1String", "ret", "awaitingDependencies", "registeredTypes", "typeDependencies", "char_0", "char_9", "makeLegalFunctionName", "f", "createNamedFunction", "body", "extendError", "baseErrorType", "errorName", "errorClass", "message", "stack", "BindingError", "throwBindingError", "InternalError", "throwInternalError", "whenDependentTypesAreResolved", "myTypes", "dependentTypes", "getTypeConverters", "type", "onComplete", "typeConverters", "myTypeConverters", "registerType", "unregisteredTypes", "registered", "dt", "rawType", "registeredInstance", "options", "__embind_register_bool", "trueValue", "falseValue", "shift", "wt", "destructors", "o", "emval_free_list", "emval_handle_array", "__emval_decref", "handle", "count_emval_handles", "count", "get_first_emval", "init_emval", "Emval", "value", "simpleReadValueFromPointer", "__embind_register_emval", "rv", "floatReadValueFromPointer", "__embind_register_float", "new_", "constructor", "argumentList", "dummy", "obj", "r", "runDestructors", "del", "craftInvokerFunction", "humanName", "argTypes", "classType", "cppInvokerFunc", "cppTargetFunc", "argCount", "isClassMethodFunc", "needsDestructorStack", "returns", "argsList", "argsListWired", "invokerFnBody", "dtorStack", "args1", "args2", "paramName", "invokerFunction", "ensureOverloadTable", "proto", "methodName", "prevFunc", "exposePublicSymbol", "numArguments", "heap32VectorToArray", "firstElement", "array", "replacePublicSymbol", "dynCallLegacy", "sig", "args", "wasmTableMirror", "getWasmTableEntry", "funcPtr", "dynCall", "rtn", "getDynCaller", "argCache", "embind__requireFunction", "signature", "rawFunction", "makeDynCaller", "fp", "UnboundTypeError", "getTypeName", "___getTypeName", "_free", "throwUnboundTypeError", "types", "unboundTypes", "seen", "visit", "__embind_register_function", "rawArgTypesAddr", "rawInvoker", "fn", "invokerArgsArray", "integerReadValueFromPointer", "signed", "__embind_register_integer", "fromWireType", "bitshift", "isUnsignedType", "checkAssertions", "toTypeName", "toWireType", "__embind_register_memory_view", "dataTypeIndex", "typeMapping", "TA", "decodeMemoryView", "data", "__embind_register_std_string", "stdStringIsUTF8", "length", "payload", "decodeStartPtr", "currentBytePtr", "maxRead", "stringSegment", "a", "valueIsOfTypeString", "base", "_malloc", "charCode", "UTF16ToString", "codeUnit", "stringToUTF16", "startPtr", "numCharsToWrite", "lengthBytesUTF16", "UTF32ToString", "utf32", "stringToUTF32", "endPtr", "trailSurrogate", "lengthBytesUTF32", "__embind_register_std_wstring", "charSize", "decodeString", "encodeString", "getHeap", "lengthBytesUTF", "HEAP", "maxReadBytes", "__embind_register_void", "requireRegisteredType", "impl", "__emval_as", "returnType", "destructorsRef", "rd", "emval_lookupTypes", "__emval_call", "argv", "__emval_get_property", "key", "__emval_incref", "__emval_is_number", "emval_symbols", "getStringOrSymbol", "address", "symbol", "__emval_new_cstring", "v", "__emval_run_destructors", "__emval_take_value", "arg", "_abort", "_emscripten_memcpy_big", "dest", "src", "num", "getHeapMax", "emscripten_realloc_buffer", "_emscripten_resize_heap", "requestedSize", "oldSize", "maxHeapSize", "alignUp", "x", "multiple", "cutDown", "overGrownHeapSize", "newSize", "replacement", "asm", "___wasm_call_ctors", "__embind_initialize_bindings", "dynCall_ijiii", "calledRun", "runCaller", "run", "doRun", "mp4_default", "START_CODE", "defaultError", "error", "createFile", "initialCapacity", "cursor", "usedBytes", "contents", "offset", "expand", "newCapacity", "prevCapacity", "CAPACITY_DOUBLING_MAX", "oldContents", "isWebCodecsSupported", "MP4", "width", "height", "groupOfPictures", "fps", "fragmentation", "sequential", "hevc", "format", "codec", "acceleration", "bitrate", "encoderOptions", "flushFrequency", "mux", "mux_write", "frameIndex", "encoder", "chunk", "writeAVC", "bitmap", "timestamp", "keyFrame", "frame", "data_ptr", "write_nal", "uint8", "p", "avccConfig", "description", "parseAVCC", "nal", "sps", "pps", "arrayBuf", "convertAVCToAnnexBInPlaceForLength4", "sub", "concatBuffers", "arrays", "arr", "pos", "chunks", "nal_length", "avcc", "view", "off", "version", "profile", "compat", "level", "length_size", "numSPS", "sps_list", "sps_len", "numPPS", "pps_list", "pps_len"]
}
